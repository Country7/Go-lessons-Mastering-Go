Работа с основными типами данных Go

----------------------------------------------------------
Числовые типы данных   numbers.go

Целые числа
  со знаком: int8, int16, int32, int64, кроме того int
  без знака: uint8, uint16, uint32 и uint64, кроме того uint

Числа с плавающей точкой: float32 и float64
Первый из них обеспечивает точность примерно до шестого знака после запятой, 
а второй — до 15-го знака

Комплексные числа: complex64 и complex128
В первом из них используется два типа float32: 
один для вещественной части комплексного числа, 
а второй — для мнимой, 
тогда как в complex128 используется два типа float64.
Комплексные числа выражаются в форме a + bi, где a и b — действительные 
числа, а i — решение уравнения x2(в квадрате) = –1

если разделить одно целое число на другое, то Go решит, что вы хотите 
получить результат целочисленного деления
При преобразовании числа с плавающей запятой в целое число дробь 
отбрасывается путем усечения числа с плавающей запятой до нуля 
знаков после запятой

% - остаток от деления двух чисел (модуль)

    $ go run numbers.go
    Type of c1: complex128
    Type of c2: complex128
    c3: (17+8i)
    Type of c3: complex64
    cZero: (0+0i)
    12
    Type of x: int
    div 2
    m, n: 1.223 0
    y: 1.7391304347826086
    divFloat 2.4
    Type of divFloat: float64


----------------------------------------------------------
Циклы Go

Цикл for
    for i := 0; i < 100; i++ {
        // break
        // continue
    }

    for ok := true; ok; ok = anExpression {
    }

    for condition {}

    range
    anArray := [5]int{0, 1, -1, 2, -2}
    for i, value := range anArray {
        fmt.Println("index:", i, "value: ", value)
    }

Пример применения нескольких циклов Go   loops.go
    $ go run loops.go


----------------------------------------------------------
Массивы в Go:   usingArrays.go
    anArray := [4]int{1, 2, 4, -4}

длина массива len(anArray)

Многомерные массивы:
    twoD := [4][4]int{{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}, {13, 14, 15, 16}}
    threeD := [2][2][2]int{{{1, 0}, {-2, 4}}, {{5, -1}, {7, 0}}}

Недостатки массивов Go:
    - если массив определен, вы не можете изменить его размер
    - передавая массив функции в качестве параметра, вы передаете копию массива
    - передача большого массива в функцию — довольно медленная операция
    Решением всех этих проблем является использование срезов Go

стр. 130


