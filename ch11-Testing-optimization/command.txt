Тестирование, оптимизация и профилирование кода

----------------------------------------------------------
Оптимизация кода Go

----------------------------------------------------------
Профилирование кода Go

    стандартный Go пакет runtime/pprof - низкого уровня

    $ go tool pprof -help

    Стандартный Go-пакет net/http/pprof - выскокого уровня

----------------------------------------------------------
Простой пример профилирования    profileMe.go

    Вызов pprof.StartCPUProfile() начинает профилирование процессора для программы, 
    а вызов pprof.StopCPUProfile() останавливает его.
    Если вы хотите многократно создавать и использовать временные файлы и каталоги, 
    обратите внимание на функции ioutil.TempFile() и ioutil.TempDir() соответственно

    pprof.WriteHeapProfile(memory)

    $ go run profileMe.go

    $ go tool pprof /tmp/cpuProfile.out   // запустить профилировщик
        help  // помощь, список команд
        top   // возвращает десять лучших записей в текстовой форме
        top10 --cum  // возвращает совокупное время выполнения для каждой функции
        list main.N1  // что происходит с каждой отдельной функцией
        pdf //  создать PDF-файл данных профилирования, понадобится программа Graphviz


----------------------------------------------------------
Удобный внешний пакет для профилирования    betterProfile.go

    github.com/pkg/profile

    $ go mod init bestProfile 
    $ go get github.com/pkg/profile

    defer profile.Start(profile.ProfilePath("/tmp")).Stop()
    defer profile.Start(profile.MemProfile).Stop()          // для профилирования памяти

    $ go run betterProfile.go
    $ go tool pprof /tmp/cpu.pprof


----------------------------------------------------------
----------------------------------------------------------
Веб-интерфейс Go-профилировщика

    Чтобы пользовательский веб-интерфейс смог работать, необходимо установить Graphviz
    https://www.macports.org/install.php скачать MacPorts-2.9.1-14-Sonoma.pkg и установить
    перезагрузить
    $ sudo port install graphviz

    Интерактивный профилировщик Go запускается с помощью такой команды:
    $ go tool pprof -http=[host]:[port] aProfile

----------------------------------------------------------
Пример профилирования с использованием веб-интерфейса

    $ go run profileMe.go

    $ go tool pprof -http=localhost:8080 /tmp/cpuProfile.out
        Serving web UI on http://localhost:8080

    открыватся браузер http://localhost:8080/ui/


----------------------------------------------------------
----------------------------------------------------------
Коротко об основах Graphviz    graph.dot

    $ dot -T png graph.dot -o graph.png


----------------------------------------------------------
----------------------------------------------------------
Утилита go tool trace    goGC.go

    go tool trace — это средство просмотра файлов трассировки, которые
    можно сгенерировать одним из трех способов:
     с помощью пакета runtime/trace;
     с помощью пакета net/http/pprof;
     с помощью команды go test -trace

    $ go doc runtime/trace









Стр. 528